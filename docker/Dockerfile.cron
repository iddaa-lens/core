# Production Dockerfile for Cron Service
FROM golang:1.23-alpine AS builder

# Install build dependencies
RUN apk add --no-cache ca-certificates git

# Set working directory
WORKDIR /app

# Copy go files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build the binary with enhanced optimizations
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags="-w -s -buildid=" -trimpath -o cron ./cmd/cron

# Final stage - use distroless static for smallest possible image
FROM gcr.io/distroless/static-debian12:latest

# Copy binary from builder stage
COPY --from=builder /app/cron /cron

# Copy CA certificates for HTTPS requests
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

# Set timezone to UTC (distroless default)
ENV TZ=UTC

# Health check using process check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD ["/cron", "--health-check"] || exit 1

# Run as non-root user (distroless uses uid 65534 by default)
USER 65534

# Run the cron service
ENTRYPOINT ["/cron"]