# Production Dockerfile for API Service
FROM golang:1.23-alpine AS builder

# Install build dependencies
RUN apk add --no-cache ca-certificates git

WORKDIR /app

# Copy go files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build the binary with enhanced optimizations
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags="-w -s -buildid=" -trimpath -o api ./cmd/api

# Final stage - use distroless for minimal attack surface and size
FROM gcr.io/distroless/static-debian12:latest

# Copy binary from builder stage
COPY --from=builder /app/api /api

# Copy CA certificates for HTTPS requests
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

# Set timezone to UTC (distroless default)
ENV TZ=UTC

EXPOSE 8080

# Health check using the binary itself (no wget needed in distroless)
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD ["/api", "--health-check"] || exit 1

# Run as non-root user (distroless uses uid 65534 by default)
USER 65534

ENTRYPOINT ["/api"]