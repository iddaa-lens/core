// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package database

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	// Analyze correlation between volume and odds movement
	AnalyzeVolumeOddsPattern(ctx context.Context) ([]byte, error)
	CreateCompetition(ctx context.Context, arg CreateCompetitionParams) (Competition, error)
	CreateConfig(ctx context.Context, arg CreateConfigParams) (AppConfig, error)
	CreateDistributionHistory(ctx context.Context, arg CreateDistributionHistoryParams) (OutcomeDistributionHistory, error)
	CreateEvent(ctx context.Context, arg CreateEventParams) (Event, error)
	CreateMatchEvent(ctx context.Context, arg CreateMatchEventParams) (MatchEvent, error)
	CreateOddsHistory(ctx context.Context, arg CreateOddsHistoryParams) (OddsHistory, error)
	CreatePrediction(ctx context.Context, arg CreatePredictionParams) (Prediction, error)
	CreateTeam(ctx context.Context, arg CreateTeamParams) (Team, error)
	CreateVolumeHistory(ctx context.Context, arg CreateVolumeHistoryParams) (BettingVolumeHistory, error)
	GetBigMovers(ctx context.Context, arg GetBigMoversParams) ([]GetBigMoversRow, error)
	GetCompetition(ctx context.Context, id int32) (GetCompetitionRow, error)
	GetCompetitionByIddaaID(ctx context.Context, iddaaID int32) (GetCompetitionByIddaaIDRow, error)
	GetContrarianBets(ctx context.Context) ([]ContrarianBet, error)
	GetCurrentOdds(ctx context.Context, eventID pgtype.Int4) ([]GetCurrentOddsRow, error)
	GetCurrentOddsByMarket(ctx context.Context, arg GetCurrentOddsByMarketParams) ([]GetCurrentOddsByMarketRow, error)
	GetCurrentOddsForOutcome(ctx context.Context, arg GetCurrentOddsForOutcomeParams) ([]CurrentOdd, error)
	GetEvent(ctx context.Context, id int32) (GetEventRow, error)
	// Analyze all betting distributions for an event
	GetEventBettingPatterns(ctx context.Context, eventID pgtype.Int4) ([]GetEventBettingPatternsRow, error)
	GetEventByExternalID(ctx context.Context, externalID string) (GetEventByExternalIDRow, error)
	GetEventStatisticsSummary(ctx context.Context, eventID int32) (GetEventStatisticsSummaryRow, error)
	// Find low-volume events with big movements (potential sharp money)
	GetHiddenGems(ctx context.Context, arg GetHiddenGemsParams) ([]GetHiddenGemsRow, error)
	// Find events with high betting volume AND significant odds movement
	GetHotMovers(ctx context.Context, arg GetHotMoversParams) ([]GetHotMoversRow, error)
	GetLatestConfig(ctx context.Context, platform string) (AppConfig, error)
	GetLatestPredictions(ctx context.Context, eventID pgtype.Int4) ([]GetLatestPredictionsRow, error)
	GetLiveEvents(ctx context.Context) ([]GetLiveEventsRow, error)
	GetMarketType(ctx context.Context, code string) (MarketType, error)
	GetMarketTypeByID(ctx context.Context, id int32) (MarketType, error)
	GetMatchEvents(ctx context.Context, eventID int32) ([]MatchEvent, error)
	GetMatchStatistics(ctx context.Context, eventID int32) ([]MatchStatistic, error)
	// Get odds changes for a specific market
	GetOddsChangesByMarket(ctx context.Context, arg GetOddsChangesByMarketParams) ([]GetOddsChangesByMarketRow, error)
	// Get full odds history for a specific event
	GetOddsHistory(ctx context.Context, eventID pgtype.Int4) ([]GetOddsHistoryRow, error)
	GetOddsMovements(ctx context.Context, arg GetOddsMovementsParams) ([]GetOddsMovementsRow, error)
	GetOutcomeDistribution(ctx context.Context, arg GetOutcomeDistributionParams) (OutcomeDistribution, error)
	GetPredictionAccuracy(ctx context.Context, sinceDate pgtype.Timestamp) ([]GetPredictionAccuracyRow, error)
	GetPredictionsByEvent(ctx context.Context, eventID pgtype.Int4) ([]GetPredictionsByEventRow, error)
	// Get recent significant odds movements across all events
	GetRecentMovements(ctx context.Context, arg GetRecentMovementsParams) ([]GetRecentMovementsRow, error)
	GetSport(ctx context.Context, id int32) (Sport, error)
	// Get potentially suspicious odds movements (sharp money indicators)
	GetSuspiciousMovements(ctx context.Context, arg GetSuspiciousMovementsParams) ([]GetSuspiciousMovementsRow, error)
	GetTeam(ctx context.Context, id int32) (Team, error)
	GetTeamByExternalID(ctx context.Context, externalID string) (Team, error)
	// Get current top events by betting volume
	GetTopVolumeEvents(ctx context.Context) ([]GetTopVolumeEventsRow, error)
	// Get volume history for a specific event
	GetVolumeHistory(ctx context.Context, eventID pgtype.Int4) ([]GetVolumeHistoryRow, error)
	ListCompetitionsByCountry(ctx context.Context, countryCode pgtype.Text) ([]ListCompetitionsByCountryRow, error)
	ListCompetitionsBySport(ctx context.Context, sportID pgtype.Int4) ([]ListCompetitionsBySportRow, error)
	ListEventsByDate(ctx context.Context, eventDate interface{}) ([]ListEventsByDateRow, error)
	ListMarketTypes(ctx context.Context) ([]MarketType, error)
	ListSports(ctx context.Context) ([]Sport, error)
	RefreshContrarianBets(ctx context.Context) error
	SearchTeams(ctx context.Context, arg SearchTeamsParams) ([]Team, error)
	UpdateCompetition(ctx context.Context, arg UpdateCompetitionParams) (Competition, error)
	UpdateEventLiveData(ctx context.Context, arg UpdateEventLiveDataParams) (Event, error)
	UpdateEventStatus(ctx context.Context, arg UpdateEventStatusParams) (Event, error)
	UpdateEventVolume(ctx context.Context, arg UpdateEventVolumeParams) (Event, error)
	UpdateSportInfo(ctx context.Context, arg UpdateSportInfoParams) (Sport, error)
	UpdateTeam(ctx context.Context, arg UpdateTeamParams) (Team, error)
	UpsertCompetition(ctx context.Context, arg UpsertCompetitionParams) (Competition, error)
	UpsertConfig(ctx context.Context, arg UpsertConfigParams) (AppConfig, error)
	UpsertCurrentOdds(ctx context.Context, arg UpsertCurrentOddsParams) (CurrentOdd, error)
	UpsertEvent(ctx context.Context, arg UpsertEventParams) (Event, error)
	UpsertMarketType(ctx context.Context, arg UpsertMarketTypeParams) (MarketType, error)
	UpsertMarketTypeByExternalID(ctx context.Context, arg UpsertMarketTypeByExternalIDParams) (MarketType, error)
	UpsertMatchStatistics(ctx context.Context, arg UpsertMatchStatisticsParams) (MatchStatistic, error)
	UpsertOutcomeDistribution(ctx context.Context, arg UpsertOutcomeDistributionParams) (OutcomeDistribution, error)
	UpsertSport(ctx context.Context, arg UpsertSportParams) (Sport, error)
	UpsertTeam(ctx context.Context, arg UpsertTeamParams) (Team, error)
}

var _ Querier = (*Queries)(nil)
