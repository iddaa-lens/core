// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package generated

import (
	"time"

	"github.com/jackc/pgx/v5/pgtype"
)

type AppConfig struct {
	ID                  int32            `db:"id" json:"id"`
	Platform            string           `db:"platform" json:"platform"`
	ConfigData          []byte           `db:"config_data" json:"config_data"`
	SportotoProgramName *string          `db:"sportoto_program_name" json:"sportoto_program_name"`
	PayinEndDate        pgtype.Timestamp `db:"payin_end_date" json:"payin_end_date"`
	NextDrawExpectedWin pgtype.Numeric   `db:"next_draw_expected_win" json:"next_draw_expected_win"`
	CreatedAt           pgtype.Timestamp `db:"created_at" json:"created_at"`
	UpdatedAt           pgtype.Timestamp `db:"updated_at" json:"updated_at"`
}

type BettingVolumeHistory struct {
	ID                 int32            `db:"id" json:"id"`
	EventID            *int32           `db:"event_id" json:"event_id"`
	VolumePercentage   float32          `db:"volume_percentage" json:"volume_percentage"`
	RankPosition       *int32           `db:"rank_position" json:"rank_position"`
	TotalEventsTracked *int32           `db:"total_events_tracked" json:"total_events_tracked"`
	RecordedAt         pgtype.Timestamp `db:"recorded_at" json:"recorded_at"`
}

type BigMover struct {
	EventID                 int32            `db:"event_id" json:"event_id"`
	EventSlug               string           `db:"event_slug" json:"event_slug"`
	EventExternalID         string           `db:"event_external_id" json:"event_external_id"`
	SportName               string           `db:"sport_name" json:"sport_name"`
	SportSlug               string           `db:"sport_slug" json:"sport_slug"`
	LeagueName              string           `db:"league_name" json:"league_name"`
	LeagueSlug              string           `db:"league_slug" json:"league_slug"`
	HomeTeam                string           `db:"home_team" json:"home_team"`
	HomeTeamSlug            string           `db:"home_team_slug" json:"home_team_slug"`
	AwayTeam                string           `db:"away_team" json:"away_team"`
	AwayTeamSlug            string           `db:"away_team_slug" json:"away_team_slug"`
	EventDate               pgtype.Timestamp `db:"event_date" json:"event_date"`
	Status                  string           `db:"status" json:"status"`
	IsLive                  *bool            `db:"is_live" json:"is_live"`
	HoursToKickoff          int32            `db:"hours_to_kickoff" json:"hours_to_kickoff"`
	MarketCode              string           `db:"market_code" json:"market_code"`
	MarketName              string           `db:"market_name" json:"market_name"`
	MarketSlug              string           `db:"market_slug" json:"market_slug"`
	Outcome                 string           `db:"outcome" json:"outcome"`
	OpeningValue            *float64         `db:"opening_value" json:"opening_value"`
	CurrentValue            float64          `db:"current_value" json:"current_value"`
	HighestValue            *float64         `db:"highest_value" json:"highest_value"`
	LowestValue             *float64         `db:"lowest_value" json:"lowest_value"`
	MovementPercentage      *float32         `db:"movement_percentage" json:"movement_percentage"`
	TotalMovement           *float64         `db:"total_movement" json:"total_movement"`
	Multiplier              int32            `db:"multiplier" json:"multiplier"`
	TrendDirection          string           `db:"trend_direction" json:"trend_direction"`
	MovementStrength        string           `db:"movement_strength" json:"movement_strength"`
	BettingVolumePercentage *float32         `db:"betting_volume_percentage" json:"betting_volume_percentage"`
	VolumeRank              *int32           `db:"volume_rank" json:"volume_rank"`
	LastUpdated             pgtype.Timestamp `db:"last_updated" json:"last_updated"`
}

type ContrarianBet struct {
	EventID           int32            `db:"event_id" json:"event_id"`
	EventSlug         string           `db:"event_slug" json:"event_slug"`
	EventExternalID   string           `db:"event_external_id" json:"event_external_id"`
	SportName         string           `db:"sport_name" json:"sport_name"`
	SportSlug         string           `db:"sport_slug" json:"sport_slug"`
	LeagueName        string           `db:"league_name" json:"league_name"`
	LeagueSlug        string           `db:"league_slug" json:"league_slug"`
	Country           *string          `db:"country" json:"country"`
	HomeTeam          string           `db:"home_team" json:"home_team"`
	HomeTeamSlug      string           `db:"home_team_slug" json:"home_team_slug"`
	AwayTeam          string           `db:"away_team" json:"away_team"`
	AwayTeamSlug      string           `db:"away_team_slug" json:"away_team_slug"`
	MatchName         interface{}      `db:"match_name" json:"match_name"`
	EventDate         pgtype.Timestamp `db:"event_date" json:"event_date"`
	HoursToKickoff    int32            `db:"hours_to_kickoff" json:"hours_to_kickoff"`
	MarketName        string           `db:"market_name" json:"market_name"`
	MarketSlug        string           `db:"market_slug" json:"market_slug"`
	PublicChoice      string           `db:"public_choice" json:"public_choice"`
	PublicPercentage  float32          `db:"public_percentage" json:"public_percentage"`
	CurrentOdds       float64          `db:"current_odds" json:"current_odds"`
	OpeningOdds       *float64         `db:"opening_odds" json:"opening_odds"`
	OddsMovement      *float32         `db:"odds_movement" json:"odds_movement"`
	OverbetPercentage float32          `db:"overbet_percentage" json:"overbet_percentage"`
	ValueIndicator    *float32         `db:"value_indicator" json:"value_indicator"`
	SignalStrength    string           `db:"signal_strength" json:"signal_strength"`
	ContrarianPlay    interface{}      `db:"contrarian_play" json:"contrarian_play"`
	LastRefreshed     time.Time        `db:"last_refreshed" json:"last_refreshed"`
}

type CurrentOdd struct {
	ID                 int32            `db:"id" json:"id"`
	EventID            *int32           `db:"event_id" json:"event_id"`
	MarketTypeID       *int32           `db:"market_type_id" json:"market_type_id"`
	Outcome            string           `db:"outcome" json:"outcome"`
	OddsValue          float64          `db:"odds_value" json:"odds_value"`
	OpeningValue       *float64         `db:"opening_value" json:"opening_value"`
	HighestValue       *float64         `db:"highest_value" json:"highest_value"`
	LowestValue        *float64         `db:"lowest_value" json:"lowest_value"`
	WinningOdds        *float64         `db:"winning_odds" json:"winning_odds"`
	TotalMovement      *float64         `db:"total_movement" json:"total_movement"`
	MovementPercentage *float32         `db:"movement_percentage" json:"movement_percentage"`
	LastUpdated        pgtype.Timestamp `db:"last_updated" json:"last_updated"`
	MarketParams       []byte           `db:"market_params" json:"market_params"`
}

type Event struct {
	ID                      int32            `db:"id" json:"id"`
	ExternalID              string           `db:"external_id" json:"external_id"`
	LeagueID                *int32           `db:"league_id" json:"league_id"`
	HomeTeamID              *int32           `db:"home_team_id" json:"home_team_id"`
	AwayTeamID              *int32           `db:"away_team_id" json:"away_team_id"`
	Slug                    string           `db:"slug" json:"slug"`
	EventDate               pgtype.Timestamp `db:"event_date" json:"event_date"`
	Status                  string           `db:"status" json:"status"`
	HomeScore               *int32           `db:"home_score" json:"home_score"`
	AwayScore               *int32           `db:"away_score" json:"away_score"`
	IsLive                  *bool            `db:"is_live" json:"is_live"`
	MinuteOfMatch           *int32           `db:"minute_of_match" json:"minute_of_match"`
	Half                    *int32           `db:"half" json:"half"`
	BettingVolumePercentage *float32         `db:"betting_volume_percentage" json:"betting_volume_percentage"`
	VolumeRank              *int32           `db:"volume_rank" json:"volume_rank"`
	VolumeUpdatedAt         pgtype.Timestamp `db:"volume_updated_at" json:"volume_updated_at"`
	BulletinID              *int64           `db:"bulletin_id" json:"bulletin_id"`
	Version                 *int64           `db:"version" json:"version"`
	SportID                 *int32           `db:"sport_id" json:"sport_id"`
	BetProgram              *int32           `db:"bet_program" json:"bet_program"`
	Mbc                     *int32           `db:"mbc" json:"mbc"`
	HasKingOdd              *bool            `db:"has_king_odd" json:"has_king_odd"`
	OddsCount               *int32           `db:"odds_count" json:"odds_count"`
	HasCombine              *bool            `db:"has_combine" json:"has_combine"`
	CreatedAt               pgtype.Timestamp `db:"created_at" json:"created_at"`
	UpdatedAt               pgtype.Timestamp `db:"updated_at" json:"updated_at"`
}

type HighVolumeEvent struct {
	EventID                 int32            `db:"event_id" json:"event_id"`
	EventSlug               string           `db:"event_slug" json:"event_slug"`
	EventExternalID         string           `db:"event_external_id" json:"event_external_id"`
	SportName               string           `db:"sport_name" json:"sport_name"`
	SportSlug               string           `db:"sport_slug" json:"sport_slug"`
	LeagueName              string           `db:"league_name" json:"league_name"`
	LeagueSlug              string           `db:"league_slug" json:"league_slug"`
	HomeTeam                string           `db:"home_team" json:"home_team"`
	HomeTeamSlug            string           `db:"home_team_slug" json:"home_team_slug"`
	AwayTeam                string           `db:"away_team" json:"away_team"`
	AwayTeamSlug            string           `db:"away_team_slug" json:"away_team_slug"`
	EventDate               pgtype.Timestamp `db:"event_date" json:"event_date"`
	Status                  string           `db:"status" json:"status"`
	BettingVolumePercentage *float32         `db:"betting_volume_percentage" json:"betting_volume_percentage"`
	VolumeRank              *int32           `db:"volume_rank" json:"volume_rank"`
	RecentVolumeChange      int32            `db:"recent_volume_change" json:"recent_volume_change"`
	VolumeUpdatedAt         pgtype.Timestamp `db:"volume_updated_at" json:"volume_updated_at"`
	VolumeCategory          string           `db:"volume_category" json:"volume_category"`
}

type League struct {
	ID                 int32            `db:"id" json:"id"`
	ExternalID         string           `db:"external_id" json:"external_id"`
	Name               string           `db:"name" json:"name"`
	Country            *string          `db:"country" json:"country"`
	SportID            *int32           `db:"sport_id" json:"sport_id"`
	IsActive           *bool            `db:"is_active" json:"is_active"`
	Slug               string           `db:"slug" json:"slug"`
	ApiFootballID      *int32           `db:"api_football_id" json:"api_football_id"`
	LeagueType         *string          `db:"league_type" json:"league_type"`
	LogoUrl            *string          `db:"logo_url" json:"logo_url"`
	CountryCode        *string          `db:"country_code" json:"country_code"`
	CountryFlagUrl     *string          `db:"country_flag_url" json:"country_flag_url"`
	HasStandings       *bool            `db:"has_standings" json:"has_standings"`
	HasFixtures        *bool            `db:"has_fixtures" json:"has_fixtures"`
	HasPlayers         *bool            `db:"has_players" json:"has_players"`
	HasTopScorers      *bool            `db:"has_top_scorers" json:"has_top_scorers"`
	HasInjuries        *bool            `db:"has_injuries" json:"has_injuries"`
	HasPredictions     *bool            `db:"has_predictions" json:"has_predictions"`
	HasOdds            *bool            `db:"has_odds" json:"has_odds"`
	CurrentSeasonYear  *int32           `db:"current_season_year" json:"current_season_year"`
	CurrentSeasonStart pgtype.Date      `db:"current_season_start" json:"current_season_start"`
	CurrentSeasonEnd   pgtype.Date      `db:"current_season_end" json:"current_season_end"`
	ApiEnrichmentData  []byte           `db:"api_enrichment_data" json:"api_enrichment_data"`
	LastApiUpdate      pgtype.Timestamp `db:"last_api_update" json:"last_api_update"`
	CreatedAt          pgtype.Timestamp `db:"created_at" json:"created_at"`
	UpdatedAt          pgtype.Timestamp `db:"updated_at" json:"updated_at"`
}

type LeagueMapping struct {
	ID                   int32            `db:"id" json:"id"`
	InternalLeagueID     int32            `db:"internal_league_id" json:"internal_league_id"`
	FootballApiLeagueID  int32            `db:"football_api_league_id" json:"football_api_league_id"`
	Confidence           float32          `db:"confidence" json:"confidence"`
	MappingMethod        string           `db:"mapping_method" json:"mapping_method"`
	TranslatedLeagueName *string          `db:"translated_league_name" json:"translated_league_name"`
	TranslatedCountry    *string          `db:"translated_country" json:"translated_country"`
	OriginalLeagueName   *string          `db:"original_league_name" json:"original_league_name"`
	OriginalCountry      *string          `db:"original_country" json:"original_country"`
	MatchFactors         []byte           `db:"match_factors" json:"match_factors"`
	NeedsReview          *bool            `db:"needs_review" json:"needs_review"`
	AiTranslationUsed    *bool            `db:"ai_translation_used" json:"ai_translation_used"`
	NormalizationApplied *bool            `db:"normalization_applied" json:"normalization_applied"`
	MatchScore           *float32         `db:"match_score" json:"match_score"`
	CreatedAt            pgtype.Timestamp `db:"created_at" json:"created_at"`
	UpdatedAt            pgtype.Timestamp `db:"updated_at" json:"updated_at"`
}

type LiveOpportunity struct {
	EventID                 int32            `db:"event_id" json:"event_id"`
	EventSlug               string           `db:"event_slug" json:"event_slug"`
	EventExternalID         string           `db:"event_external_id" json:"event_external_id"`
	SportName               string           `db:"sport_name" json:"sport_name"`
	SportSlug               string           `db:"sport_slug" json:"sport_slug"`
	LeagueName              string           `db:"league_name" json:"league_name"`
	LeagueSlug              string           `db:"league_slug" json:"league_slug"`
	HomeTeam                string           `db:"home_team" json:"home_team"`
	HomeTeamSlug            string           `db:"home_team_slug" json:"home_team_slug"`
	AwayTeam                string           `db:"away_team" json:"away_team"`
	AwayTeamSlug            string           `db:"away_team_slug" json:"away_team_slug"`
	HomeScore               *int32           `db:"home_score" json:"home_score"`
	AwayScore               *int32           `db:"away_score" json:"away_score"`
	MinuteOfMatch           *int32           `db:"minute_of_match" json:"minute_of_match"`
	Half                    *int32           `db:"half" json:"half"`
	Status                  string           `db:"status" json:"status"`
	MarketName              string           `db:"market_name" json:"market_name"`
	MarketSlug              string           `db:"market_slug" json:"market_slug"`
	Outcome                 string           `db:"outcome" json:"outcome"`
	CurrentOdds             float64          `db:"current_odds" json:"current_odds"`
	PreMatchOdds            *float64         `db:"pre_match_odds" json:"pre_match_odds"`
	TotalMovement           *float32         `db:"total_movement" json:"total_movement"`
	LiveMovementPct         float32          `db:"live_movement_pct" json:"live_movement_pct"`
	CurrentBacking          float32          `db:"current_backing" json:"current_backing"`
	BettingVolumePercentage *float32         `db:"betting_volume_percentage" json:"betting_volume_percentage"`
	OpportunityType         string           `db:"opportunity_type" json:"opportunity_type"`
	LastUpdated             pgtype.Timestamp `db:"last_updated" json:"last_updated"`
}

type MarketType struct {
	ID                    int32            `db:"id" json:"id"`
	Code                  string           `db:"code" json:"code"`
	Name                  string           `db:"name" json:"name"`
	Slug                  string           `db:"slug" json:"slug"`
	Description           *string          `db:"description" json:"description"`
	IddaaMarketID         *int32           `db:"iddaa_market_id" json:"iddaa_market_id"`
	IsLive                *bool            `db:"is_live" json:"is_live"`
	MarketType            *int32           `db:"market_type" json:"market_type"`
	MinMarketDefaultValue *int32           `db:"min_market_default_value" json:"min_market_default_value"`
	MaxMarketLimitValue   *int32           `db:"max_market_limit_value" json:"max_market_limit_value"`
	Priority              *int32           `db:"priority" json:"priority"`
	SportType             *int32           `db:"sport_type" json:"sport_type"`
	MarketSubType         *int32           `db:"market_sub_type" json:"market_sub_type"`
	MinDefaultValue       *int32           `db:"min_default_value" json:"min_default_value"`
	MaxLimitValue         *int32           `db:"max_limit_value" json:"max_limit_value"`
	IsActive              *bool            `db:"is_active" json:"is_active"`
	CreatedAt             pgtype.Timestamp `db:"created_at" json:"created_at"`
	UpdatedAt             pgtype.Timestamp `db:"updated_at" json:"updated_at"`
}

type MatchEvent struct {
	ID          int32            `db:"id" json:"id"`
	EventID     *int32           `db:"event_id" json:"event_id"`
	Minute      int32            `db:"minute" json:"minute"`
	EventType   string           `db:"event_type" json:"event_type"`
	Team        string           `db:"team" json:"team"`
	Player      *string          `db:"player" json:"player"`
	Description string           `db:"description" json:"description"`
	IsHome      bool             `db:"is_home" json:"is_home"`
	CreatedAt   pgtype.Timestamp `db:"created_at" json:"created_at"`
}

type MatchStatistic struct {
	ID            int32            `db:"id" json:"id"`
	EventID       *int32           `db:"event_id" json:"event_id"`
	IsHome        bool             `db:"is_home" json:"is_home"`
	Shots         *int32           `db:"shots" json:"shots"`
	ShotsOnTarget *int32           `db:"shots_on_target" json:"shots_on_target"`
	Possession    *int32           `db:"possession" json:"possession"`
	Corners       *int32           `db:"corners" json:"corners"`
	YellowCards   *int32           `db:"yellow_cards" json:"yellow_cards"`
	RedCards      *int32           `db:"red_cards" json:"red_cards"`
	Fouls         *int32           `db:"fouls" json:"fouls"`
	Offsides      *int32           `db:"offsides" json:"offsides"`
	FreeKicks     *int32           `db:"free_kicks" json:"free_kicks"`
	ThrowIns      *int32           `db:"throw_ins" json:"throw_ins"`
	GoalKicks     *int32           `db:"goal_kicks" json:"goal_kicks"`
	Saves         *int32           `db:"saves" json:"saves"`
	CreatedAt     pgtype.Timestamp `db:"created_at" json:"created_at"`
	UpdatedAt     pgtype.Timestamp `db:"updated_at" json:"updated_at"`
}

type MovementAlert struct {
	ID               int32            `db:"id" json:"id"`
	OddsHistoryID    int32            `db:"odds_history_id" json:"odds_history_id"`
	AlertType        string           `db:"alert_type" json:"alert_type"`
	Severity         string           `db:"severity" json:"severity"`
	Title            string           `db:"title" json:"title"`
	Message          string           `db:"message" json:"message"`
	ChangePercentage float32          `db:"change_percentage" json:"change_percentage"`
	Multiplier       float64          `db:"multiplier" json:"multiplier"`
	ConfidenceScore  float32          `db:"confidence_score" json:"confidence_score"`
	MinutesToKickoff *int32           `db:"minutes_to_kickoff" json:"minutes_to_kickoff"`
	CreatedAt        pgtype.Timestamp `db:"created_at" json:"created_at"`
	UpdatedAt        pgtype.Timestamp `db:"updated_at" json:"updated_at"`
	DeletedAt        pgtype.Timestamp `db:"deleted_at" json:"deleted_at"`
	ExpiresAt        pgtype.Timestamp `db:"expires_at" json:"expires_at"`
	IsActive         bool             `db:"is_active" json:"is_active"`
	Views            int32            `db:"views" json:"views"`
	Clicks           int32            `db:"clicks" json:"clicks"`
}

type OddsHistory struct {
	ID                  int32            `db:"id" json:"id"`
	EventID             *int32           `db:"event_id" json:"event_id"`
	MarketTypeID        *int32           `db:"market_type_id" json:"market_type_id"`
	Outcome             string           `db:"outcome" json:"outcome"`
	OddsValue           float64          `db:"odds_value" json:"odds_value"`
	PreviousValue       *float64         `db:"previous_value" json:"previous_value"`
	WinningOdds         *float64         `db:"winning_odds" json:"winning_odds"`
	ChangeAmount        *float64         `db:"change_amount" json:"change_amount"`
	ChangePercentage    *float32         `db:"change_percentage" json:"change_percentage"`
	Multiplier          *float64         `db:"multiplier" json:"multiplier"`
	SharpMoneyIndicator *float32         `db:"sharp_money_indicator" json:"sharp_money_indicator"`
	IsReverseMovement   *bool            `db:"is_reverse_movement" json:"is_reverse_movement"`
	SignificanceLevel   *string          `db:"significance_level" json:"significance_level"`
	MinutesToKickoff    *int32           `db:"minutes_to_kickoff" json:"minutes_to_kickoff"`
	MarketParams        []byte           `db:"market_params" json:"market_params"`
	RecordedAt          pgtype.Timestamp `db:"recorded_at" json:"recorded_at"`
}

type OutcomeDistribution struct {
	ID                 int32            `db:"id" json:"id"`
	EventID            *int32           `db:"event_id" json:"event_id"`
	MarketID           int32            `db:"market_id" json:"market_id"`
	MarketTypeID       *int32           `db:"market_type_id" json:"market_type_id"`
	Outcome            string           `db:"outcome" json:"outcome"`
	BetPercentage      float32          `db:"bet_percentage" json:"bet_percentage"`
	ImpliedProbability *float32         `db:"implied_probability" json:"implied_probability"`
	ValueIndicator     *float32         `db:"value_indicator" json:"value_indicator"`
	LastUpdated        pgtype.Timestamp `db:"last_updated" json:"last_updated"`
}

type OutcomeDistributionHistory struct {
	ID                 int32            `db:"id" json:"id"`
	EventID            *int32           `db:"event_id" json:"event_id"`
	MarketID           int32            `db:"market_id" json:"market_id"`
	Outcome            string           `db:"outcome" json:"outcome"`
	BetPercentage      float32          `db:"bet_percentage" json:"bet_percentage"`
	PreviousPercentage *float32         `db:"previous_percentage" json:"previous_percentage"`
	ChangeAmount       *float32         `db:"change_amount" json:"change_amount"`
	RecordedAt         pgtype.Timestamp `db:"recorded_at" json:"recorded_at"`
}

type SharpMoneyMove struct {
	EventID             int32            `db:"event_id" json:"event_id"`
	EventSlug           string           `db:"event_slug" json:"event_slug"`
	EventExternalID     string           `db:"event_external_id" json:"event_external_id"`
	SportName           string           `db:"sport_name" json:"sport_name"`
	SportSlug           string           `db:"sport_slug" json:"sport_slug"`
	LeagueName          string           `db:"league_name" json:"league_name"`
	LeagueSlug          string           `db:"league_slug" json:"league_slug"`
	MatchName           interface{}      `db:"match_name" json:"match_name"`
	HomeTeamSlug        string           `db:"home_team_slug" json:"home_team_slug"`
	AwayTeamSlug        string           `db:"away_team_slug" json:"away_team_slug"`
	EventDate           pgtype.Timestamp `db:"event_date" json:"event_date"`
	Status              string           `db:"status" json:"status"`
	MarketName          string           `db:"market_name" json:"market_name"`
	MarketSlug          string           `db:"market_slug" json:"market_slug"`
	Outcome             string           `db:"outcome" json:"outcome"`
	CurrentOdds         float64          `db:"current_odds" json:"current_odds"`
	PreviousOdds        *float64         `db:"previous_odds" json:"previous_odds"`
	ChangePercentage    *float32         `db:"change_percentage" json:"change_percentage"`
	SharpMoneyIndicator *float32         `db:"sharp_money_indicator" json:"sharp_money_indicator"`
	IsReverseMovement   *bool            `db:"is_reverse_movement" json:"is_reverse_movement"`
	SignificanceLevel   *string          `db:"significance_level" json:"significance_level"`
	MinutesToKickoff    *int32           `db:"minutes_to_kickoff" json:"minutes_to_kickoff"`
	SharpConfidence     string           `db:"sharp_confidence" json:"sharp_confidence"`
	SignalDescription   string           `db:"signal_description" json:"signal_description"`
	RecordedAt          pgtype.Timestamp `db:"recorded_at" json:"recorded_at"`
}

type Sport struct {
	ID                int32            `db:"id" json:"id"`
	Name              string           `db:"name" json:"name"`
	Code              string           `db:"code" json:"code"`
	Slug              string           `db:"slug" json:"slug"`
	LiveCount         *int32           `db:"live_count" json:"live_count"`
	UpcomingCount     *int32           `db:"upcoming_count" json:"upcoming_count"`
	EventsCount       *int32           `db:"events_count" json:"events_count"`
	OddsCount         *int32           `db:"odds_count" json:"odds_count"`
	HasResults        *bool            `db:"has_results" json:"has_results"`
	HasKingOdd        *bool            `db:"has_king_odd" json:"has_king_odd"`
	HasDigitalContent *bool            `db:"has_digital_content" json:"has_digital_content"`
	CreatedAt         pgtype.Timestamp `db:"created_at" json:"created_at"`
	UpdatedAt         pgtype.Timestamp `db:"updated_at" json:"updated_at"`
}

type Team struct {
	ID                int32            `db:"id" json:"id"`
	ExternalID        string           `db:"external_id" json:"external_id"`
	Name              string           `db:"name" json:"name"`
	Country           *string          `db:"country" json:"country"`
	LogoUrl           *string          `db:"logo_url" json:"logo_url"`
	IsActive          *bool            `db:"is_active" json:"is_active"`
	Slug              string           `db:"slug" json:"slug"`
	ApiFootballID     *int32           `db:"api_football_id" json:"api_football_id"`
	TeamCode          *string          `db:"team_code" json:"team_code"`
	FoundedYear       *int32           `db:"founded_year" json:"founded_year"`
	IsNationalTeam    *bool            `db:"is_national_team" json:"is_national_team"`
	VenueID           *int32           `db:"venue_id" json:"venue_id"`
	VenueName         *string          `db:"venue_name" json:"venue_name"`
	VenueAddress      *string          `db:"venue_address" json:"venue_address"`
	VenueCity         *string          `db:"venue_city" json:"venue_city"`
	VenueCapacity     *int32           `db:"venue_capacity" json:"venue_capacity"`
	VenueSurface      *string          `db:"venue_surface" json:"venue_surface"`
	VenueImageUrl     *string          `db:"venue_image_url" json:"venue_image_url"`
	ApiEnrichmentData []byte           `db:"api_enrichment_data" json:"api_enrichment_data"`
	LastApiUpdate     pgtype.Timestamp `db:"last_api_update" json:"last_api_update"`
	CreatedAt         pgtype.Timestamp `db:"created_at" json:"created_at"`
	UpdatedAt         pgtype.Timestamp `db:"updated_at" json:"updated_at"`
}

type TeamMapping struct {
	ID                   int32            `db:"id" json:"id"`
	InternalTeamID       int32            `db:"internal_team_id" json:"internal_team_id"`
	FootballApiTeamID    int32            `db:"football_api_team_id" json:"football_api_team_id"`
	Confidence           float32          `db:"confidence" json:"confidence"`
	MappingMethod        string           `db:"mapping_method" json:"mapping_method"`
	TranslatedTeamName   *string          `db:"translated_team_name" json:"translated_team_name"`
	TranslatedCountry    *string          `db:"translated_country" json:"translated_country"`
	TranslatedLeague     *string          `db:"translated_league" json:"translated_league"`
	OriginalTeamName     *string          `db:"original_team_name" json:"original_team_name"`
	OriginalCountry      *string          `db:"original_country" json:"original_country"`
	OriginalLeague       *string          `db:"original_league" json:"original_league"`
	MatchFactors         []byte           `db:"match_factors" json:"match_factors"`
	NeedsReview          *bool            `db:"needs_review" json:"needs_review"`
	AiTranslationUsed    *bool            `db:"ai_translation_used" json:"ai_translation_used"`
	NormalizationApplied *bool            `db:"normalization_applied" json:"normalization_applied"`
	MatchScore           *float32         `db:"match_score" json:"match_score"`
	CreatedAt            pgtype.Timestamp `db:"created_at" json:"created_at"`
	UpdatedAt            pgtype.Timestamp `db:"updated_at" json:"updated_at"`
}

type ValueSpot struct {
	EventID            int32            `db:"event_id" json:"event_id"`
	EventSlug          string           `db:"event_slug" json:"event_slug"`
	EventExternalID    string           `db:"event_external_id" json:"event_external_id"`
	SportName          string           `db:"sport_name" json:"sport_name"`
	SportSlug          string           `db:"sport_slug" json:"sport_slug"`
	LeagueName         string           `db:"league_name" json:"league_name"`
	LeagueSlug         string           `db:"league_slug" json:"league_slug"`
	MatchName          interface{}      `db:"match_name" json:"match_name"`
	HomeTeamSlug       string           `db:"home_team_slug" json:"home_team_slug"`
	AwayTeamSlug       string           `db:"away_team_slug" json:"away_team_slug"`
	EventDate          pgtype.Timestamp `db:"event_date" json:"event_date"`
	HoursToKickoff     int32            `db:"hours_to_kickoff" json:"hours_to_kickoff"`
	MarketCode         string           `db:"market_code" json:"market_code"`
	MarketName         string           `db:"market_name" json:"market_name"`
	MarketSlug         string           `db:"market_slug" json:"market_slug"`
	Outcome            string           `db:"outcome" json:"outcome"`
	CurrentOdds        float64          `db:"current_odds" json:"current_odds"`
	OpeningOdds        *float64         `db:"opening_odds" json:"opening_odds"`
	MovementPercentage *float32         `db:"movement_percentage" json:"movement_percentage"`
	BetPercentage      *float32         `db:"bet_percentage" json:"bet_percentage"`
	ImpliedProbability *float32         `db:"implied_probability" json:"implied_probability"`
	PublicBias         int32            `db:"public_bias" json:"public_bias"`
	MaxSharpIndicator  interface{}      `db:"max_sharp_indicator" json:"max_sharp_indicator"`
	ValueScore         int32            `db:"value_score" json:"value_score"`
	Recommendation     string           `db:"recommendation" json:"recommendation"`
	LastUpdated        pgtype.Timestamp `db:"last_updated" json:"last_updated"`
}
