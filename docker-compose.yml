services:
  postgres:
    image: postgres:15-alpine
    container_name: iddaa-postgres
    environment:
      POSTGRES_DB: iddaa_core
      POSTGRES_USER: iddaa
      POSTGRES_PASSWORD: iddaa123
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U iddaa -d iddaa_core"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - iddaa-network

  cron:
    build: .
    container_name: iddaa-cron
    command: ["./cron"]
    environment:
      - DATABASE_URL=postgres://iddaa:iddaa123@postgres:5432/iddaa_core?sslmode=disable
      - EXTERNAL_API_TIMEOUT=30
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    networks:
      - iddaa-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  api:
    build: .
    container_name: iddaa-api
    command: ["./api"]
    environment:
      - DATABASE_URL=postgres://iddaa:iddaa123@postgres:5432/iddaa_core?sslmode=disable
      - PORT=8080
      - HOST=0.0.0.0
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    networks:
      - iddaa-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  iddaa-network:
    driver: bridge
